{

	// Place your snippets for Javascript (Babel) here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	"buildValue": {
		"prefix": "log",
		"body": [
			"buildValue (record) {",
			"\t$1",
			"}"
		],
		"description": "Build value from constructed record"
	},
	"ReactTestFile": {
		"prefix": "React Component Test File",
		"body": [
			"import React from 'react'",
			"import { shallow } from 'enzyme'",
			"import { expect } from 'chai'",
			"import sinon from 'sinon'",
			"",
			"describe('SearchBar', () => {",
			"  let sandbox",
			"",
			"  beforeEach(() => {",
			"    sandbox = sinon.sandbox.create()",
			"  })",
			"",
			"  afterEach(() => {",
			"    sandbox.restore()",
			"  })",
			"})",
			""
		],
		"description": "A test file for a React Component"
	},
	"ReactComponentFile": {
		"prefix": "React Component",
		"body": [
			"import React, { Component } from 'react'",
			"import PropTypes from 'prop-types'",
			"",
			"class $1 extends Component {",
			"  state = {",
			"",
  		"  }",
			"",
  		"  static propTypes = {",
			"",
			"  }",
			"",
			"  render () {",
			"    return (",
			"    )",
			"  }",
			"}",
			"",
			"export default $1",
			""
		],
		"description": "React component"
	}
}