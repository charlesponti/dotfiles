#!/bin/bash

# Default values
INPUT=""
OUTPUT_DIR="icons"
SITE_NAME="My Website"
SITE_URL="/"
THEME_COLOR="#ffffff"
BACKGROUND_COLOR="#ffffff"

# Help function
show_help() {
  cat << EOF
Usage: webicon-maker -i <input> [options]

Generate web icons and PWA assets from a source image.

OPTIONS:
  -i, --input <file>        Input image file (required)
  -o, --output <dir>        Output directory (default: icons)
  -n, --name <name>         Site name for manifest (default: "My Website")
  -u, --url <url>           Site URL for manifest (default: "/")
  -t, --theme <color>       Theme color in hex (default: "#ffffff")
  -b, --background <color>  Background color in hex (default: "#ffffff")
  -h, --help               Show this help message

EXAMPLES:
  webicon-maker -i logo.png
  webicon-maker -i logo.png -o assets/icons -n "My App" -u "https://example.com"
  webicon-maker --input logo.svg --output icons --theme "#4285f4" --background "#ffffff"

GENERATED FILES:
  - favicon.ico and various favicon PNGs
  - Apple Touch icons in various sizes
  - Android/PWA icons in various sizes
  - Microsoft Tile icons
  - Social media sharing images (og-image.jpg, twitter-card.jpg)
  - manifest.json for PWAs
  - link-tags.html with HTML tags to include in your page
  - browserconfig.xml for Microsoft browsers
EOF
}

# Parse command line arguments
while [[ $# -gt 0 ]]; do
  case $1 in
    -i|--input)
      INPUT="$2"
      shift 2
      ;;
    -o|--output)
      OUTPUT_DIR="$2"
      shift 2
      ;;
    -n|--name)
      SITE_NAME="$2"
      shift 2
      ;;
    -u|--url)
      SITE_URL="$2"
      shift 2
      ;;
    -t|--theme)
      THEME_COLOR="$2"
      shift 2
      ;;
    -b|--background)
      BACKGROUND_COLOR="$2"
      shift 2
      ;;
    -h|--help)
      show_help
      exit 0
      ;;
    *)
      echo "Unknown option: $1"
      echo "Use -h or --help for usage information."
      exit 1
      ;;
  esac
done

# Check if input file is provided
if [ -z "$INPUT" ]; then
  echo "❌ Error: Input image file is required."
  echo ""
  show_help
  exit 1
fi

# Check if input file exists
if [ ! -f "$INPUT" ]; then
  echo "❌ Error: Input file '$INPUT' does not exist."
  exit 1
fi

# Validate color format (basic hex color validation)
validate_color() {
  local color="$1"
  local name="$2"
  if [[ ! "$color" =~ ^#[0-9A-Fa-f]{6}$ ]]; then
    echo "❌ Error: Invalid $name color '$color'. Please use hex format like #ffffff"
    exit 1
  fi
}

validate_color "$THEME_COLOR" "theme"
validate_color "$BACKGROUND_COLOR" "background"

echo "🎨 Web Icon Maker"
echo "📂 Input: $INPUT"
echo "📁 Output: $OUTPUT_DIR"
echo "🏷️  Site: $SITE_NAME"
echo "🌐 URL: $SITE_URL"
echo "🎨 Theme: $THEME_COLOR"
echo "🎨 Background: $BACKGROUND_COLOR"
echo ""

echo "🔍 Checking for ImageMagick..."
if ! command -v magick &> /dev/null; then
  echo "❌ ImageMagick not found. Please install it first:"
  echo "   brew install imagemagick"
  exit 1
fi

# Output directory
mkdir -p "$OUTPUT_DIR"
echo "📁 Creating output directory: $OUTPUT_DIR"

# Favicon ICO (multi-size)
echo "🔄 Generating favicon.ico..."
magick "$INPUT" -define icon:auto-resize=16,32,48,64,128,256 "$OUTPUT_DIR/favicon.ico"

# Standard favicon PNG sizes
echo "🔄 Generating standard favicon PNGs..."
magick "$INPUT" -resize 16x16 "$OUTPUT_DIR/favicon-16x16.png"
magick "$INPUT" -resize 32x32 "$OUTPUT_DIR/favicon-32x32.png"
magick "$INPUT" -resize 48x48 "$OUTPUT_DIR/favicon-48x48.png"
magick "$INPUT" -resize 96x96 "$OUTPUT_DIR/favicon-96x96.png"

# Apple touch icons
echo "🔄 Generating Apple touch icons..."
magick "$INPUT" -resize 57x57 "$OUTPUT_DIR/apple-touch-icon-57x57.png"
magick "$INPUT" -resize 60x60 "$OUTPUT_DIR/apple-touch-icon-60x60.png"
magick "$INPUT" -resize 72x72 "$OUTPUT_DIR/apple-touch-icon-72x72.png"
magick "$INPUT" -resize 76x76 "$OUTPUT_DIR/apple-touch-icon-76x76.png"
magick "$INPUT" -resize 114x114 "$OUTPUT_DIR/apple-touch-icon-114x114.png"
magick "$INPUT" -resize 120x120 "$OUTPUT_DIR/apple-touch-icon-120x120.png"
magick "$INPUT" -resize 144x144 "$OUTPUT_DIR/apple-touch-icon-144x144.png"
magick "$INPUT" -resize 152x152 "$OUTPUT_DIR/apple-touch-icon-152x152.png"
magick "$INPUT" -resize 180x180 "$OUTPUT_DIR/apple-touch-icon.png"
magick "$INPUT" -resize 180x180 "$OUTPUT_DIR/apple-touch-icon-180x180.png"

# Android & PWA icons
echo "🔄 Generating Android & PWA icons..."
magick "$INPUT" -resize 36x36 "$OUTPUT_DIR/android-icon-36x36.png"
magick "$INPUT" -resize 48x48 "$OUTPUT_DIR/android-icon-48x48.png"
magick "$INPUT" -resize 72x72 "$OUTPUT_DIR/android-icon-72x72.png"
magick "$INPUT" -resize 96x96 "$OUTPUT_DIR/android-icon-96x96.png"
magick "$INPUT" -resize 144x144 "$OUTPUT_DIR/android-icon-144x144.png"
magick "$INPUT" -resize 192x192 "$OUTPUT_DIR/android-icon-192x192.png"
magick "$INPUT" -resize 192x192 "$OUTPUT_DIR/icon-192x192.png"
magick "$INPUT" -resize 384x384 "$OUTPUT_DIR/icon-384x384.png"
magick "$INPUT" -resize 512x512 "$OUTPUT_DIR/icon-512x512.png"

# Microsoft Tile icons
echo "🔄 Generating Microsoft Tile icons..."
magick "$INPUT" -resize 70x70 "$OUTPUT_DIR/ms-icon-70x70.png"
magick "$INPUT" -resize 144x144 "$OUTPUT_DIR/ms-icon-144x144.png"
magick "$INPUT" -resize 150x150 "$OUTPUT_DIR/ms-icon-150x150.png"
magick "$INPUT" -resize 310x310 "$OUTPUT_DIR/ms-icon-310x310.png"

# Social Media icons (larger sizes for better quality)
echo "🔄 Generating Social Media sharing icons..."
# OpenGraph / Facebook
magick "$INPUT" -resize 1200x630 "$OUTPUT_DIR/og-image.jpg"
# Twitter Card
magick "$INPUT" -resize 1200x600 "$OUTPUT_DIR/twitter-card.jpg"

# Safari Pinned Tab icon - monochrome SVG is recommended
echo "⚠️  Note: For Safari Pinned Tab, a monochrome SVG is recommended."
echo "   If you have an SVG source, manually copy it to $OUTPUT_DIR/safari-pinned-tab.svg"

# Generate manifest.json
echo "📝 Generating manifest.json..."
cat > "$OUTPUT_DIR/manifest.json" << EOF
{
  "name": "$SITE_NAME",
  "short_name": "$SITE_NAME",
  "description": "$SITE_NAME - Web Application",
  "start_url": "/",
  "display": "standalone",
  "orientation": "any",
  "background_color": "$BACKGROUND_COLOR",
  "theme_color": "$THEME_COLOR",
  "icons": [
    {
      "src": "./icon-192x192.png",
      "sizes": "192x192",
      "type": "image/png",
      "purpose": "any maskable"
    },
    {
      "src": "./icon-384x384.png",
      "sizes": "384x384",
      "type": "image/png",
      "purpose": "any maskable"
    },
    {
      "src": "./icon-512x512.png",
      "sizes": "512x512",
      "type": "image/png",
      "purpose": "any maskable"
    }
  ]
}
EOF

# Generate HTML link tags file
echo "📝 Generating link-tags.html..."
cat > "$OUTPUT_DIR/link-tags.html" << EOF
<!-- Favicon -->
<link rel="icon" type="image/x-icon" href="$OUTPUT_DIR/favicon.ico">
<link rel="icon" type="image/png" sizes="16x16" href="$OUTPUT_DIR/favicon-16x16.png">
<link rel="icon" type="image/png" sizes="32x32" href="$OUTPUT_DIR/favicon-32x32.png">
<link rel="icon" type="image/png" sizes="96x96" href="$OUTPUT_DIR/favicon-96x96.png">

<!-- Apple Touch Icons -->
<link rel="apple-touch-icon" href="$OUTPUT_DIR/apple-touch-icon.png">
<link rel="apple-touch-icon" sizes="57x57" href="$OUTPUT_DIR/apple-touch-icon-57x57.png">
<link rel="apple-touch-icon" sizes="60x60" href="$OUTPUT_DIR/apple-touch-icon-60x60.png">
<link rel="apple-touch-icon" sizes="72x72" href="$OUTPUT_DIR/apple-touch-icon-72x72.png">
<link rel="apple-touch-icon" sizes="76x76" href="$OUTPUT_DIR/apple-touch-icon-76x76.png">
<link rel="apple-touch-icon" sizes="114x114" href="$OUTPUT_DIR/apple-touch-icon-114x114.png">
<link rel="apple-touch-icon" sizes="120x120" href="$OUTPUT_DIR/apple-touch-icon-120x120.png">
<link rel="apple-touch-icon" sizes="144x144" href="$OUTPUT_DIR/apple-touch-icon-144x144.png">
<link rel="apple-touch-icon" sizes="152x152" href="$OUTPUT_DIR/apple-touch-icon-152x152.png">
<link rel="apple-touch-icon" sizes="180x180" href="$OUTPUT_DIR/apple-touch-icon-180x180.png">

<!-- Android Icons -->
<link rel="icon" type="image/png" sizes="36x36" href="$OUTPUT_DIR/android-icon-36x36.png">
<link rel="icon" type="image/png" sizes="48x48" href="$OUTPUT_DIR/android-icon-48x48.png">
<link rel="icon" type="image/png" sizes="72x72" href="$OUTPUT_DIR/android-icon-72x72.png">
<link rel="icon" type="image/png" sizes="96x96" href="$OUTPUT_DIR/android-icon-96x96.png">
<link rel="icon" type="image/png" sizes="144x144" href="$OUTPUT_DIR/android-icon-144x144.png">
<link rel="icon" type="image/png" sizes="192x192" href="$OUTPUT_DIR/android-icon-192x192.png">

<!-- Microsoft Tile Icons -->
<meta name="msapplication-TileColor" content="$THEME_COLOR">
<meta name="msapplication-TileImage" content="$OUTPUT_DIR/ms-icon-144x144.png">
<meta name="msapplication-square70x70logo" content="$OUTPUT_DIR/ms-icon-70x70.png">
<meta name="msapplication-square150x150logo" content="$OUTPUT_DIR/ms-icon-150x150.png">
<meta name="msapplication-square310x310logo" content="$OUTPUT_DIR/ms-icon-310x310.png">

<!-- Web Manifest -->
<link rel="manifest" href="$OUTPUT_DIR/manifest.json">

<!-- Theme Color -->
<meta name="theme-color" content="$THEME_COLOR">

<!-- Safari Pinned Tab Icon -->
<link rel="mask-icon" href="$OUTPUT_DIR/safari-pinned-tab.svg" color="$THEME_COLOR">

<!-- Social Media / OpenGraph -->
<meta property="og:image" content="$SITE_URL/$OUTPUT_DIR/og-image.jpg">
<meta property="og:image:width" content="1200">
<meta property="og:image:height" content="630">

<!-- Twitter Card -->
<meta name="twitter:card" content="summary_large_image">
<meta name="twitter:image" content="$SITE_URL/$OUTPUT_DIR/twitter-card.jpg">
EOF

# Generate browserconfig.xml for Microsoft browsers
echo "📝 Generating browserconfig.xml..."
cat > "$OUTPUT_DIR/browserconfig.xml" << EOF
<?xml version="1.0" encoding="utf-8"?>
<browserconfig>
  <msapplication>
    <tile>
      <square70x70logo src="$OUTPUT_DIR/ms-icon-70x70.png"/>
      <square150x150logo src="$OUTPUT_DIR/ms-icon-150x150.png"/>
      <square310x310logo src="$OUTPUT_DIR/ms-icon-310x310.png"/>
      <TileColor>$THEME_COLOR</TileColor>
    </tile>
  </msapplication>
</browserconfig>
EOF

echo "✅ All icons generated successfully!"
echo ""
echo "📄 Generated files in '$OUTPUT_DIR/':"
echo "   • favicon.ico and various favicon PNGs"
echo "   • Apple Touch icons in various sizes"
echo "   • Android/PWA icons in various sizes"
echo "   • Microsoft Tile icons"
echo "   • Social media sharing images (og-image.jpg, twitter-card.jpg)"
echo "   • manifest.json for PWAs"
echo "   • link-tags.html with HTML tags to include in your page"
echo "   • browserconfig.xml for Microsoft browsers"
echo ""
echo "📋 Next steps:"
echo "   1. Copy the contents of '$OUTPUT_DIR/link-tags.html' into your HTML <head> section"
echo "   2. Adjust the paths as needed for your project structure"
echo "   3. Copy the icon files to your web server's public directory"
echo ""
echo "💡 Tip: Run 'webicon-maker --help' for more options"
